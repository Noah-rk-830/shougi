@charset "utf-8";
body{
    /* background-color: #ece0c6; */
    background-image: url(../image/background-ece0c6.png);
    background-size: cover;
}
h1{
    text-align: center;
    margin-bottom: 40px;
}
.tb{
    margin: auto;
    border-collapse: collapse;
    width: 100%;
    max-width: 600px;
    /* background-color: #b87b4b; */
    background-image: url(../image/background-b87b4b.png);
    background-size: cover;
    border-radius: 8px;
    box-shadow: 0 2px 6px rgba(0,0,0,0.2);
    overflow: hidden;
    border: 2px solid black;
}
.tb td{
    border: 2px solid black;
    padding: 30px;
    cursor: pointer;
    font-size: 1.4em;
    font-weight: bold;
    transition: background-color 0.3s;
    text-align: center;
}
.fixed-icon {
    border: 2px solid white;
    border-radius: 50%;
    overflow: hidden;
    position: fixed;
    bottom: 20px;
    left: 20px;
    z-index: 1000;
    border-collapse: collapse; /* テーブルの隙間をなくす */
    background-color: white;
}
.fixed-icon td {
    width: 60px;
    height: 60px;
    padding: 0;
    cursor: pointer;
}
.fixed-icon img {
    width: 100%;
    height: 100%;
    object-fit: cover; /* アイコン画像を枠に合わせて切り抜き */
    display: block;
}
.submit{
    display: flex;
    gap: 10px;
    align-items: center;
    justify-content: center;
    width: fit-content;
    margin: 0 auto;
}
.submit button{
    margin-top: 1.0em;
    width: 200px;
    padding: 10px;
    box-sizing: border-box;
    /* background: #b87b4b; */
    background-image: url(../image/background-b87b4b.png);
    background-size: cover;
    cursor: pointer;
    /* アニメーション */
    transition: all 0.2s ease;
    position: relative;
}
.submit button:hover {
    transform: translateX(3px); /* 少し右へ移動 */
    filter: brightness(90%);   /* 少し暗くする */
}
.player-cell {
    width: 75%;
}
.time-cell {
    width: 16.7%;
    text-align: right;
}
.star-cell {
    width: 8.3%;
    text-align: center;
}
.star-checkbox {
    display: none;
}
.star-label {
    font-size: 20px;
    color: gray;
    cursor: pointer;
    user-select: none;
}
.player-cell a {
    text-decoration: none;
    margin-right: 8px;
}
/* game.html */
.p2 ,.p1{
    display: flex;
    align-items: center; /* 中央揃え */
    gap: 40px; /* 各要素間に十分な間隔 */
}
.p2M ,.p1M{
    border-collapse: collapse;
}
.p2M th, .p2M td ,.p1M th ,.p1M td{
    border: 1px solid #ccc;
    padding: 8px;
    text-align: center;
}
.bd td{
    border: 2px solid black;
    cursor: pointer;
    font-weight: bold;
    width: 50px;
    height: 50px;
    min-height: 50px;
    text-align: center;
    vertical-align: middle;
}
.bd th{
    border: 2px solid black;
    font-weight: bold;
}
.bd table{
    margin: auto;
    border-collapse: collapse;
    width: 100%;
    max-width: 600px;
    /* background-color: #b87b4b; */
    background-image: url(../image/background-b87b4b.png);
    background-size: cover;
    box-shadow: 0 2px 6px rgba(0,0,0,0.2);
    overflow: hidden;
    border: 2px solid black;
}
.bd .board{
    background-color: rgba(255, 255, 255, 0.3);
}
/* General styling for all koma images */
.koma-image {
    max-width: 100%;  /* Ensures images fit within the cell */
    height: auto;     /* Maintains aspect ratio */
    display: block;   /* Removes extra space below image */
    /* Add any other default image styles here (e.g., margin, padding) */
}

/* Rotation for images where koma.user is 2 */
.koma-image.rotate-180 {
    transform: rotate(180deg);
    /* By default, transform-origin is center center, which is usually desired for rotation */
}

/* Optional: If you want to ensure the cell content (image) is centered */
.board-cell {
    display: flex;
    justify-content: center;
    align-items: center;
    /* You might want to set a min-width/min-height for cells here */
    min-width: 50px; /* Example value, adjust as needed */
    min-height: 50px; /* Example value, adjust as needed */
}

/* Optional: If the table itself needs to be rotated (as discussed previously) */
/*
table {
    transform: rotate(180deg);
    transform-origin: center center;
}

table th, table td {
    transform: rotate(180deg); // To counter-rotate the table content if the table is rotated
}

.kansuji {
    transform: rotate(180deg); // To counter-rotate the Kanji if the table is rotated
}
*/

